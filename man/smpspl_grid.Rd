% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smpspl_grid.R
\name{smpspl_grid}
\alias{smpspl_grid}
\title{Sample Split Residuals on a Grid}
\usage{
smpspl_grid(object, data, num_analysis, num_assessment, ...)
}
\arguments{
\item{object}{An object to fit a time series model to. Implemented models are
\code{model_spec}, \code{workflow} or \code{mdl_defn} objects.}

\item{data}{A \link[tsibble:tsibble-package]{tsibble} of predictors and outcomes
to use when fitting the model.}

\item{num_analysis}{A positive integer specifying number of observations for
analysis.}

\item{num_assessment}{A positive integer specifying number of observations
for goodness-of-fit tests.}

\item{...}{Additional arguments needed to fit the data such as formula.}
}
\description{
Fits model according to sample splitting on a grid of values determined by
\code{num_analysis} and \code{num_assessment}, where each tuple determines the number
of analysis and assessment sets.
}
\examples{
library(fable)
library(smpspltools)
library(generics)
data <-
     tsibble::tsibble(x = rnorm(100), date = Sys.Date() + 0:99, index = date)
# Consider an AR(1) model
o <-
     ARIMA(x ~ pdq(1, 0, 0) + PDQ(0, 0, 0)) |>
     smpspl_grid(data, 2, 2)
# Calculate lanyard features
my_acf <-
     function(x) {
         data.frame(t = x, e = 0) |>
             lanyard::acf_metric(t, e) |>
             tidy()
     }
o |>
     features(.resid, .subresid, .assessment, features = my_acf) |>
     tidyr::unnest(.nested_features) |>
     tidyr::unnest(.features)
library(dplyr)
library(parsnip)
library(modeltime)
# Repeat with `modeltime::arima_reg`
arima_spec <-
     arima_reg() |>
     set_engine("arima")
o2 <- smpspl_grid(arima_spec, data, 2, 2, formula = x ~ date)
o2 |>
     features(.resid, .subresid, .assessment, features = my_acf) |>
     tidyr::unnest(.nested_features) |>
     tidyr::unnest(.features)
}
